<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imnu.crm.mapper.ContractMapper">
  <resultMap id="BaseResultMap" type="com.imnu.crm.pojo.Contract">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="u_name" jdbcType="VARCHAR" property="uName" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="l_date" jdbcType="DATE" property="lDate" />
    <result column="c_path" jdbcType="VARCHAR" property="cPath" />
    <result column="c_money" jdbcType="DOUBLE" property="cMoney" />
    <result column="c_name" jdbcType="VARCHAR" property="cName" />
    <result column="c_location" jdbcType="VARCHAR" property="cLocation" />
    <result column="c_htyouxqi" jdbcType="VARCHAR" property="cHtyouxqi" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, u_name, date, l_date, c_path, c_money, c_name, c_location, c_htyouxqi
  </sql>
  <select id="selectByExample" parameterType="com.imnu.crm.pojo.ContractExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from contract
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from contract
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.imnu.crm.pojo.ContractExample">
    delete from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.imnu.crm.pojo.Contract">
    insert into contract (id, name, u_name, 
      date, l_date, c_path, c_money, 
      c_name, c_location, c_htyouxqi
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{uName,jdbcType=VARCHAR}, 
      #{date,jdbcType=DATE}, #{lDate,jdbcType=DATE}, #{cPath,jdbcType=VARCHAR}, #{cMoney,jdbcType=DOUBLE}, 
      #{cName,jdbcType=VARCHAR}, #{cLocation,jdbcType=VARCHAR}, #{cHtyouxqi,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.imnu.crm.pojo.Contract">
    insert into contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="uName != null">
        u_name,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="lDate != null">
        l_date,
      </if>
      <if test="cPath != null">
        c_path,
      </if>
      <if test="cMoney != null">
        c_money,
      </if>
      <if test="cName != null">
        c_name,
      </if>
      <if test="cLocation != null">
        c_location,
      </if>
      <if test="cHtyouxqi != null">
        c_htyouxqi,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="uName != null">
        #{uName,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="lDate != null">
        #{lDate,jdbcType=DATE},
      </if>
      <if test="cPath != null">
        #{cPath,jdbcType=VARCHAR},
      </if>
      <if test="cMoney != null">
        #{cMoney,jdbcType=DOUBLE},
      </if>
      <if test="cName != null">
        #{cName,jdbcType=VARCHAR},
      </if>
      <if test="cLocation != null">
        #{cLocation,jdbcType=VARCHAR},
      </if>
      <if test="cHtyouxqi != null">
        #{cHtyouxqi,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.imnu.crm.pojo.ContractExample" resultType="java.lang.Long">
    select count(*) from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update contract
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.uName != null">
        u_name = #{record.uName,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.lDate != null">
        l_date = #{record.lDate,jdbcType=DATE},
      </if>
      <if test="record.cPath != null">
        c_path = #{record.cPath,jdbcType=VARCHAR},
      </if>
      <if test="record.cMoney != null">
        c_money = #{record.cMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.cName != null">
        c_name = #{record.cName,jdbcType=VARCHAR},
      </if>
      <if test="record.cLocation != null">
        c_location = #{record.cLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.cHtyouxqi != null">
        c_htyouxqi = #{record.cHtyouxqi,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update contract
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      u_name = #{record.uName,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE},
      l_date = #{record.lDate,jdbcType=DATE},
      c_path = #{record.cPath,jdbcType=VARCHAR},
      c_money = #{record.cMoney,jdbcType=DOUBLE},
      c_name = #{record.cName,jdbcType=VARCHAR},
      c_location = #{record.cLocation,jdbcType=VARCHAR},
      c_htyouxqi = #{record.cHtyouxqi,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.imnu.crm.pojo.Contract">
    update contract
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="uName != null">
        u_name = #{uName,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="lDate != null">
        l_date = #{lDate,jdbcType=DATE},
      </if>
      <if test="cPath != null">
        c_path = #{cPath,jdbcType=VARCHAR},
      </if>
      <if test="cMoney != null">
        c_money = #{cMoney,jdbcType=DOUBLE},
      </if>
      <if test="cName != null">
        c_name = #{cName,jdbcType=VARCHAR},
      </if>
      <if test="cLocation != null">
        c_location = #{cLocation,jdbcType=VARCHAR},
      </if>
      <if test="cHtyouxqi != null">
        c_htyouxqi = #{cHtyouxqi,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imnu.crm.pojo.Contract">
    update contract
    set name = #{name,jdbcType=VARCHAR},
      u_name = #{uName,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      l_date = #{lDate,jdbcType=DATE},
      c_path = #{cPath,jdbcType=VARCHAR},
      c_money = #{cMoney,jdbcType=DOUBLE},
      c_name = #{cName,jdbcType=VARCHAR},
      c_location = #{cLocation,jdbcType=VARCHAR},
      c_htyouxqi = #{cHtyouxqi,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>