<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imnu.crm.mapper.SprogrammeMapper">
  <resultMap id="BaseResultMap" type="com.imnu.crm.pojo.Sprogramme">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="startdate" jdbcType="VARCHAR" property="startdate" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="duration" jdbcType="VARCHAR" property="duration" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="ename" jdbcType="VARCHAR" property="ename" />
    <result column="etel" jdbcType="VARCHAR" property="etel" />
    <result column="location" jdbcType="VARCHAR" property="location" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, startdate, date, duration, content, name, pid, ename, etel, location
  </sql>
  <select id="selectByExample" parameterType="com.imnu.crm.pojo.SprogrammeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sprogramme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sprogramme
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sprogramme
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.imnu.crm.pojo.SprogrammeExample">
    delete from sprogramme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.imnu.crm.pojo.Sprogramme">
    insert into sprogramme (id, startdate, date, 
      duration, content, name, 
      pid, ename, etel, location
      )
    values (#{id,jdbcType=INTEGER}, #{startdate,jdbcType=VARCHAR}, #{date,jdbcType=DATE}, 
      #{duration,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{pid,jdbcType=INTEGER}, #{ename,jdbcType=VARCHAR}, #{etel,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.imnu.crm.pojo.Sprogramme">
    insert into sprogramme
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="startdate != null">
        startdate,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="ename != null">
        ename,
      </if>
      <if test="etel != null">
        etel,
      </if>
      <if test="location != null">
        location,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="startdate != null">
        #{startdate,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="ename != null">
        #{ename,jdbcType=VARCHAR},
      </if>
      <if test="etel != null">
        #{etel,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.imnu.crm.pojo.SprogrammeExample" resultType="java.lang.Long">
    select count(*) from sprogramme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sprogramme
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.startdate != null">
        startdate = #{record.startdate,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.duration != null">
        duration = #{record.duration,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.ename != null">
        ename = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.etel != null">
        etel = #{record.etel,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sprogramme
    set id = #{record.id,jdbcType=INTEGER},
      startdate = #{record.startdate,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE},
      duration = #{record.duration,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      ename = #{record.ename,jdbcType=VARCHAR},
      etel = #{record.etel,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.imnu.crm.pojo.Sprogramme">
    update sprogramme
    <set>
      <if test="startdate != null">
        startdate = #{startdate,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="ename != null">
        ename = #{ename,jdbcType=VARCHAR},
      </if>
      <if test="etel != null">
        etel = #{etel,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imnu.crm.pojo.Sprogramme">
    update sprogramme
    set startdate = #{startdate,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      duration = #{duration,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      ename = #{ename,jdbcType=VARCHAR},
      etel = #{etel,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>